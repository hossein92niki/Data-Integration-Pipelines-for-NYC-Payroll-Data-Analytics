{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "hosseindatafactory"
		},
		"ls_AzureDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_AzureDataLake'"
		},
		"ls_AzureSQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_AzureSQLDB'"
		},
		"ls_AzureSynapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_AzureSynapse'"
		},
		"ls_AzureDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://hosseinstorages.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_AzureDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_AzureDataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureSQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_AzureSQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureSynapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_AzureSynapse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgencyMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "AgencyMaster.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayroll-hossein-nikseresht"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EmpMaster.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayroll-hossein-nikseresht"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoryData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nycpayroll_2020.csv",
						"folderPath": "dirhistoryfiles",
						"fileSystem": "adlsnycpayroll-hossein-nikseresht"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC_Payroll_AGENCY_MD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_AGENCY_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC_Payroll_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC_Payroll_DataSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC_Payroll_EMP_MD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_EMP_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYC_Payroll_TITLE_MD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_TITLE_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TitleMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "TitleMaster.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayroll-hossein-nikseresht"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nycpayroll_2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nycpayroll_2021.csv",
						"folderPath": "dirpayrollfiles",
						"fileSystem": "adlsnycpayroll-hossein-nikseresht"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_synapse_nycpayroll_summary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "TotalPaid",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Summary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgencymasterToSynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AgencyMaster",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_AGENCY_MD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          AgencyID,",
						"          AgencyName",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AgencyMaster')]",
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_AGENCY_MD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow Aggregate Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_Data",
								"type": "DatasetReference"
							},
							"name": "PayrollData2021"
						},
						{
							"dataset": {
								"referenceName": "HistoryData",
								"type": "DatasetReference"
							},
							"name": "PayrollData2020"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "table_synapse_nycpayroll_summary",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedcolumn1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     dataflow_param_fiscalyear as integer (2020)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> PayrollData2021",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PayrollData2020",
						"PayrollData2021, PayrollData2020 union(byName: true)~> union1",
						"union1 filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> filter1",
						"filter1 derive(TotalPaid = RegularGrossPaid+TotalOTPaid+TotalOtherPay) ~> derivedcolumn1",
						"derivedcolumn1 aggregate(groupBy(FiscalYear,",
						"          AgencyName),",
						"     TotalPaid = sum(TotalPaid)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          AgencyName,",
						"          TotalPaid",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_Data')]",
				"[concat(variables('factoryId'), '/datasets/HistoryData')]",
				"[concat(variables('factoryId'), '/datasets/table_synapse_nycpayroll_summary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpmasterToSynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmpMaster",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_EMP_MD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EmpMaster')]",
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_EMP_MD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYCpayrollToSynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_DataSQL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_Data",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyID,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_DataSQL')]",
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TitlemasterToSynapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TitleMaster",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_TITLE_MD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          TitleCode,",
						"          TitleDescription",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TitleMaster')]",
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_TITLE_MD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_2021_payroll_to_sql')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "nycpayroll_2021",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "NYC_Payroll_DataSQL",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "ls_AzureDataLake",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date 'MM/dd/yyyy',",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyID,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/nycpayroll_2021')]",
				"[concat(variables('factoryId'), '/datasets/NYC_Payroll_DataSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLake')]"
			]
		}
	]
}